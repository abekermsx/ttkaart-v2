@model ttkaart.ViewModels.ClubSeasonPlayerViewModel

@using ttkaart.Helpers
@using ttkaart.Service
@using ttkaart.Models

@{
    ViewBag.Title = "TTKAART.NL - Resultaten spelers " + Model.playerResults[0].clubName + " - " + (Model.playerResults[0].seasonPeriod == 1 ? "Voorjaar" : "Najaar") + " " + Model.playerResults[0].seasonYear;
    ViewBag.Description = "Overzicht van alle spelers van " + Model.playerResults[0].clubName + " die tijdens het seizoen " + (Model.playerResults[0].seasonPeriod == 1 ? "voorjaar" : "najaar") + " " + Model.playerResults[0].seasonYear + " competitie hebben gespeeld.";
    ViewBag.HasSideBar = false;
    ViewBag.Robots = "none";
}

<h1>
Resultaten 
@Html.RouteLink(Model.club.clubName, 
                "VerenigingenDetails", 
                new RouteValueDictionary { { "id", Model.club.id }, { "name", Model.club.clubName.ToUrlFriendlyString() }} )
(@(Model.playerResults[0].seasonPeriod == 1 ? "voorjaar" : "najaar") @Model.playerResults[0].seasonYear)
</h1>

<table class="data">
    @Html.GenerateTableHeader(TableModels.ClubPlayerHeadings, Request.QueryString["SorteerOp"], Request.QueryString["Richting"])
    <tbody>
@{
    foreach (var result in Model.playerResults)
    {
        string playerName = result.playerName.ToUrlFriendlyString();
        RouteValueDictionary routeValues = new RouteValueDictionary{{ "id",result.playerNr},{"name", playerName }};
        
        @:<tr>
        <td>@Html.RouteLink(result.playerNr, "SpelersDetails", routeValues)</td>
        <td>@Html.RouteLink(result.playerName, "SpelersDetails", routeValues)</td>
    
        <td>@Html.RouteLink(result.clubName + " " + result.teamNumber,
                            "TeamDetails",
                            new RouteValueDictionary { { "id", result.teamId },{ "name", (result.clubName + " " + result.teamNumber).ToUrlFriendlyString()} })</td>
    
        <td>@(result.pouleCategory == 1 ? "Senioren" : "Junioren")</td>
        <td>@result.regionName</td>
        
        <td>    
            @Html.RouteLink((result.className + " - " + result.pouleName).Trim(new char[] { ' ', '-' }),
                            "PouleDetails",
                            new RouteValueDictionary { { "id", result.pouleId }, {"name", (result.className + " - " + result.pouleName).ToUrlFriendlyString() }})
        </td>

        <td>@result.setsPlayed</td>
        <td>@result.setsWon</td>
        <td>@result.percentage</td>
        <td>@(result.rating == -9999 ? "-" : result.baseRating.ToString())</td>
        <td>@(result.rating == -9999 ? "-" : result.rating.ToString())</td>
        <td>@result.license</td>
    /*
        <td class="tournament" style="display:none;"><input type="button" value="+" onclick="addPlayer('@result.playerName','@result.clubName',@(result.rating == -9999 ? 0 : @result.rating));this.style['display']='none';" /></td>
    */
        @:</tr>
    }
}
    </tbody>
</table>
<p>
* ratings van voorjaar 2006 en eerder zijn gebaseerd op de basisratings van najaar 2006<br />
** rating op basis competitieresultaat<br />
*** licentie op basis van seizoensrating (kan afwijken van daadwerkelijke licentie)<br />
</p>
